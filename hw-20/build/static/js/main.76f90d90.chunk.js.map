{"version":3,"sources":["components/timer.js","App.js","index.js"],"names":["Timer","props","startTime","step","React","useState","time","setTime","timerOn","setTimeOn","useEffect","interval","setInterval","prevTime","console","log","Math","floor","clearInterval","className","slice","onClick","style","width","App","ReactDOM","render","document","getElementById"],"mappings":"gPAgDeA,MA7Cf,SAAeC,GACb,IAAQC,EAAoBD,EAApBC,UAAWC,EAASF,EAATE,KACnB,EAAwBC,IAAMC,SAASH,GAAvC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAA6BH,IAAMC,UAAS,GAA5C,mBAAOG,EAAP,KAAgBC,EAAhB,KAwBA,OAtBAL,IAAMM,WAAU,WACd,IAAIC,EAAW,KAiBf,OAfIH,EACFG,EAAWC,aAAY,WACrBL,GAAQ,SAAAM,GACN,OAAIA,EAAW,GACbC,QAAQC,IAAR,iGAAgCC,KAAKC,MAAMJ,EAL9B,KAKb,SACQA,EANK,IAMwBV,IAErCM,GAAU,GACQP,QAGrB,KAEHgB,cAAcP,GAET,kBAAMO,cAAcP,MAE1B,CAACH,IAGF,sBAAKW,UAAU,QAAf,UACE,sBAAKA,UAAU,QAAf,UACE,kCAAQ,IAAMH,KAAKC,MAAOX,EAAO,IAAS,KAAKc,OAAO,GAAtD,OACA,gCAAQ,IAAMJ,KAAKC,MAAOX,EAAO,IAAQ,KAAKc,OAAO,QAEvD,wBAAQD,UAAU,eAAeE,QAAS,kBAAMZ,GAAU,IAA1D,mBACA,wBAAQU,UAAU,cAAcE,QAAS,kBAAMZ,GAAU,IAAzD,kBACA,wBAAQU,UAAU,gBAAgBE,QAAS,kBAAMZ,GAAU,IAA3D,oBACA,wBAAQU,UAAU,eAAeE,QAAS,kBAAMd,EAAQL,IAAxD,mBACA,qBAAKiB,UAAU,cAAf,SACE,qBAAKA,UAAU,WAAWG,MAAO,CAAEC,MAAM,GAAD,OAAM,IAAMrB,EAAYI,EAAxB,cC3BjCkB,MAVf,WAEE,OACE,sBAAKL,UAAU,MAAf,UACE,cAAC,EAAD,CAAOjB,UAAU,QAAQC,KAAK,MAC9B,cAAC,EAAD,CAAOD,UAAU,QAAQC,KAAK,UCJpCsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.76f90d90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from './timer.css'\r\n\r\nfunction Timer(props) {\r\n  const { startTime, step } = props;\r\n  const [time, setTime] = React.useState(startTime)\r\n  const [timerOn, setTimeOn] = React.useState(true)\r\n\r\n  React.useEffect(() => {\r\n    let interval = null;\r\n    let stepInProgress = 1000;\r\n    if (timerOn) {\r\n      interval = setInterval(() => {\r\n        setTime(prevTime => {\r\n          if (prevTime > 0) {\r\n            console.log(`Залишилось часу: ${Math.floor(prevTime / stepInProgress)} sec`)\r\n            return (prevTime - (stepInProgress * step));\r\n          } else {\r\n            setTimeOn(false);\r\n            return prevTime = startTime;\r\n          }\r\n        })\r\n      }, 1000)\r\n    } else {\r\n      clearInterval(interval)\r\n    }\r\n    return () => clearInterval(interval);\r\n\r\n  }, [timerOn])\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div className=\"title\">\r\n        <span>{('0' + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\r\n        <span>{('0' + Math.floor((time / 1000) % 60)).slice(-2)}</span>\r\n      </div>\r\n      <button className=\"button start\" onClick={() => setTimeOn(true)}>Start</button>\r\n      <button className=\"button stop\" onClick={() => setTimeOn(false)}>Stop</button>\r\n      <button className=\"button resume\" onClick={() => setTimeOn(true)}>Resume</button>\r\n      <button className=\"button reset\" onClick={() => setTime(startTime)}>Reset</button>\r\n      <div className=\"progressBar\">\r\n        <div className=\"progress\" style={{ width: `${(100 / startTime * time)}%` }}></div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;","import React from 'react';\nimport './App.css';\nimport Timer from './components/timer'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Timer startTime='60000' step='1' />\n      <Timer startTime='60000' step='2'/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}